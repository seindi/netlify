import vue from "vue.min.js/factory"
import $$$ from "core.min.js/src/browser"
$$$.route = vue.route
$$$.router = vue.router

vue.library.io = null
vue.library.axios = $$$.axios

var action = {}

export const on_action = function (key, value) {
	if (key in action) action [key].push (value)
	else action [key] = [value]
	return value
	}

export const do_action = function (key, ... value) {
	if (action [key]) {
		if (action [key].length === 1) return action [key].begin ().call (null, ... value)
		else for (var i in action [key]) action [key][i].call (null, ... value)
		}
	}

export const ls_action = function () {
	return {... action}
	}

export const lib = $$$
export const library = function () {}
export const the = function () {}
export default {
	__: vue.reactive (), proto: vue.proto, var: vue.reactive (), ini: vue.reactive (), web: {site: vue.reactive (), socket: vue.reactive ()}, log: {}, cache: {}, part: [], partial: [],
	app: vue.reactive ({router: {}}), application: vue.application, package: vue.reactive (), module: vue.reactive (), ready: vue.reactive (),
	properties: vue.properties, to: vue.to, reference: vue.reference, reactive: vue.reactive, react: vue.react,
	compute: vue.compute, watch: vue.watch, inject: vue.inject, store: vue.store, model: vue.model,
	on: vue.on, emit: vue.emit,
	process: vue.process, request: vue.request, response: vue.response, respond: vue.respond,
	slot: vue.slot, layout: vue.layout, component: vue.component, element: vue.element,
	next: vue.next, directive: vue.directive,
	script: {}, error: {},
	}
