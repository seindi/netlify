/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

require ("core.min.js")
var lib = require ("core.min.js/src")
const {define} = lib
const {zero, one} = lib

var $$$ = {
	express: require ("express.min.js"),
	app: require ("express.min.js/src"),
	vue: require ("vue.min.js/package.vue"),
	}

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

let vue = new lib.app

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

vue.get ("/", function (request, response) {
	lib.time.sleep (function () {
		var router = {
			title: "home:page",
			type: "home:page",
			layout: {name: "default"},
			component: {main: [{name: "help:sample"}, {name: "account-register-test"}]},
			}
		response (router)
		})
	})

vue.get ("/tag", function (request, response) {
	response ({
		title: "tag:list",
		type: "tag:list",
		layout: {name: "default"},
		})
	})

vue.get ("/tag/:name", function (request, response) {
	response ({
		title: "tag",
		type: "tag",
		layout: {name: "default"},
		})
	})

vue.get ("/author", function (request, response) {
	response ({
		title: "author:list",
		type: "author:list",
		layout: {name: "default"},
		})
	})

vue.get ("/author/:name", function (request, response) {
	response ({
		title: "author",
		type: "author:list/content",
		layout: {name: "default"},
		})
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

vue.get ("/blog", function (request, response) {
	var router = {
		title: "blog:list",
		type: "blog:list",
		layout: {name: "default"},
		component: {main: [{name: "help:sample"}, {name: "blog-list-test", data: [{id: 123}, {id: 234}]}]},
		}
	response (router)
	})

vue.get ("/blog/:name", function (request, response) {
	response ({
		title: "blog",
		type: "blog",
		layout: {name: "default"},
		})
	})

vue.get ("/blog/:year/:month/:name", function (request, response) {
	response ({
		title: "blog by date",
		type: "blog",
		layout: {name: "default"},
		})
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

vue.get ("/cgi-bin/account/register", function (request, response) {
	response ({
		title: "account register",
		type: "account:register",
		layout: {name: "default"},
		})
	})

vue.get ("/cgi-bin/account/login", function (request, response) {
	response ({
		title: "account login",
		type: "account:login",
		layout: {name: "default"},
		})
	})

vue.get ("/cgi-bin/account/logout", function (request, response) {
	response ({
		title: "account logout",
		type: "account:logout",
		layout: {name: "default"},
		})
	})

vue.post ("/cgi-bin/account/register", function (request, response) {
	response ({
		title: "account register",
		})
	})

vue.post ("/cgi-bin/account/login", function (request, response) {
	response ({
		title: "account login",
		})
	})

vue.post ("/cgi-bin/account/logout", function (request, response) {
	response ({
		title: "account logout",
		})
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

function miscellaneous_cashier_header_begin () {
	var component = []
	component.push ({name: "miscellaneous:header-logo", data: [{id: zero}, {id: zero}]})
	component.push ({name: "miscellaneous:header-search", data: [{id: zero}, {id: zero}]})
	return component
	}

function miscellaneous_cashier_header_end () {
	var component = []
	var menu = [
		{id: zero, title: "Cashier", icon: "qr_code_scanner", url: "/miscellaneous/cashier"},
		{id: zero, title: "Product", icon: "wb_sunny", url: "/miscellaneous/cashier/product"},
		{id: zero, title: "Purchase Order", icon: "assignment", url: "/miscellaneous/cashier/purchase-order"},
		{id: zero, title: "Report", icon: "insights", url: "/miscellaneous/cashier/report"},
		]
	component.push ({name: "miscellaneous:header-nav", data: menu})
	return component
	}

vue.get ("/miscellaneous/cashier", function (request, response) {
	var router = {
		title: "Cashier",
		type: "custom",
		layout: {name: "miscellaneous:cashier"},
		component: {
			main: [{name: "help:sample"}, {name: "blog-list-test", data: [{id: 123}, {id: 234}]}],
			header_begin: miscellaneous_cashier_header_begin (),
			header_end: miscellaneous_cashier_header_end (),
			},
		}
	response (router)
	})

vue.get ("/miscellaneous/cashier/:sub", function (request, response) {
	var router = {
		title: "Cashier",
		type: "custom",
		layout: {name: "miscellaneous:cashier"},
		component: {
			main: [{name: "help:sample"}, {name: "blog-list-test", data: [{id: 123}, {id: 234}]}],
			header_begin: miscellaneous_cashier_header_begin (),
			header_end: miscellaneous_cashier_header_end (),
			},
		}
	response (router)
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

vue.catch ("*", function (request, response) {
	response ({
		title: "Error",
		link: {title: "Link Error"},
		layout: {name: "web-portal"},
		})
	if (null) {
		var regex = lib.regex.path (request.data.path, "/")
		request.slug = regex.param
		if (regex.match) {
			response ({
				title: "Error",
				link: {title: "Link Error"},
				})
			}
		else response ({
			title: "Error",
			link: {title: "Link Error"},
			})
		}
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

vue.on ("package", function (request, response) {
	var $_app = this.app.package.get ()
	var $_vue = this.package.get ()
	var router = {link: lib.object.merge ($_app.router.link, $_vue.router.link)}
	var web = {site: lib.object.merge (this.app.package.get ("web").site), socket: {buffer: {size: $$$.app.package.get ("web").socket.buffer.size, unit: $$$.app.package.get ("web").socket.buffer.unit}}}
	var variable = {}
	if (request.prop ()) {
		this.app.package.set (request.data).write ()
		response ($$$.vue.package (this.app.package.get ()))
		}
	else response ({
		package: $$$.vue.package ($_app),
		session: this.app.session.get (),
		language: this.app.language.get (),
		visitor: request.visitor,
		web, router, var: variable,
		})
	})

vue.on ("date", function (request, response) {
	response ()
	})

vue.on ("time", function (request, response) {
	response ()
	})

vue.on ("session", function (request, response) {
	if (request.prop ()) this.app.session.set (request.data).write ()
	response (this.app.session.get ())
	})

vue.on ("session:delete", function (request, response) {
	if (request.string ()) this.app.session.delete (request.data).write ()
	response (this.app.session.get ())
	})

vue.on ("language", function (request, response) {
	response ()
	})

vue.on ("language:data", function (request, response) {
	var data = this.app.language.set (request.data, null, "load").data
	response (data)
	})

vue.on ("language:set", function (request, response) {
	var language = request.data
	var session = lib.context ({app: this.app, language}, function () { if (this.app.session.set ("language", this.language).write ()) this.app.tcp.session.set ("language", this.language).write () })
	var data = this.app.language.set (language, session, "load").data
	response (data)
	})

vue.on ("file:upload", function (request, response) {
	if (request.data.file) {
		lib.file.upload (request.data.file.name, request.data.file.buffer, function (file, error) {
			if (error) response.error (error)
			else {
				lib.file.move (file.path, lib.path.join (this.vue.app.dir.static, file.name))
				response (file)
				}
			}.bind ({vue: this}))
		}
	else response.error ("file")
	})

vue.on ("...", function (request, response) {
	response (request.data)
	})

vue.on ("*", function (request, response) {
	response ()
	})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

define (module).export (vue)

/**
 * the end
 *
 * xxx://xxx.xxx.xxx/xxx
 */
