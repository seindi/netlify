require ("core.min.js")
var lib = require ("core.min.js/src")
var $$$ = require ("vue.min.js/library/package.vue")
const {define, echo} = lib
const {zero, one} = lib

define ($$$.vue).function ("response", function (vue, router, socket) {
	if (socket) return function (request, response) {
		var next = function () {}
		var path = request.data.path
		if (path in router) {
			var next = function () {}
			$$$.vue.emit ("response:prepare", request, response, next, vue)
			router [path].context.call (vue, request, response, next, vue)
			}
		}
	else return function (request, response, next) {
		var promise = new lib.promise (function (resolve, reject) {
			vue.app.session.reload ()
			var response = function (data) { resolve (data) }
			response.error = function (data) { reject (data) }
			$$$.vue.emit ("response:prepare", request, response, next, vue)
			router.context.call (vue, request, response, next, vue)
			})
		promise.then (function (response) {
			$$$.vue.emit ("response:then", request, response, vue)
			vue.render (request, response)
			})
		promise.catch ()
		}
	})
