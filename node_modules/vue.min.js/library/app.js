/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

var $
var library = require ("core.min.js")
var lib = require ("core.min.js/src")
const {define, echo} = lib
const {zero, one} = lib

var $$$ = {
	express: require ("express.min.js"),
	app: require ("express.min.js/src"),
	application: {},
	file: ($ = require ("vue.min.js/package-lock")).file,
	directory: $.directory,
	}

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

class app {
	constructor () {}
	path (... path) { return lib.path.join ($$$.app.folder, ... path) }
	exist (host) { return lib.file.exist (this.path (host, "package.json")) }
	create (host, j_son) {
		if (this.exist (host)) return new lib.error
		else {
			if (null) {
				var directory = this.path (host)
				lib.dir.copy (app.dir.distribution, directory)
				var the = {
					package: new lib.db (this.path (host, "package.json"), {data: {}}),
					}
				the.package.set (j_son).write ()
				}
			}
		}
	}

define (app).set ("dir", {distribution: lib.path.join ($$$.directory, "path", "to", "distribution")})

/**
 * xxx
 *
 * title
 * description
 * sub description
 *
 * xxx://xxx.xxx.xxx/xxx
 */

define (module).export (app)

/**
 * the end
 *
 * xxx://xxx.xxx.xxx/xxx
 */
