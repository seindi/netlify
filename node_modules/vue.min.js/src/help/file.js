import vue, {lib, library} from "vue.min.js"
import ini from "@/package.json"
let {define} = lib
let {zero, one} = lib

vue.file = function (model, option) {
	option = lib.option (option, {size: vue.web.socket.buffer.size [vue.web.socket.buffer.unit] ()})
	var file = vue.model (model)
	var success = false
	var e = zero
	var error = {}
	if (file) {
		var name = file.name
		var extension = lib.file.extension (file.name)
		var size = file.size
		var type = file.type
		if (option.extension) if (option.extension.exist (extension) === false) if (error.extension = true) e ++
		if (option.size) if (file.size > option.size) if (error.size = true) e ++
		if (e === zero) {
			success = true
			error = null
			}
		return {error, success, name, extension, size, type, buffer: file}
		}
	return {error: "file"}
	}

vue.file.upload = function (model, option) {
	var file = vue.file (model, option)
	if (file.error) return lib.promise.catch (file)
	else return vue.socket.emit ("file:upload", {file})
	}
