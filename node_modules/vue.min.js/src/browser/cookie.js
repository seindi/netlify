import vue, {lib, library} from "vue.min.js"
import ini from "@/package.json"
let {define} = lib
let {zero, one} = lib

var cookie = {name: lib.session.name, signature: lib.session.signature, mode: lib.session.mode, secure: lib.session.secure}
var name = lib.storage.set ("cookie:name", (cookie.name || lib.session.name), true)
var signature = lib.storage.set ("cookie:signature", (cookie.signature || lib.session.signature), true)
var mode = lib.storage.set ("cookie:mode", (cookie.mode || lib.session.mode), true)
var secure = lib.storage.set ("cookie:secure", (cookie.secure || lib.session.secure), true)
vue.cookie = new lib.session.manager ("browser")
vue.cookie.start ({name, signature, mode, secure}, function (id) {})
vue.cookie.check = function (check) {
	if (check) {}
	else {
		var cookie = zero
		var session = vue.package.session
		vue.emit ("session:check", cookie)
		if (session) {
			if ((session.name === lib.storage.get ("cookie:name")) === false) if (lib.storage.set ("cookie:name", session.name)) cookie ++
			if ((session.signature === lib.storage.get ("cookie:signature")) === false) if (lib.storage.set ("cookie:signature", session.signature)) cookie ++
			if ((session.mode === lib.storage.get ("cookie:mode")) === false) if (lib.storage.set ("cookie:mode", session.mode)) cookie ++
			if ((session.secure === lib.storage.get ("cookie:secure")) === false) if (lib.storage.set ("cookie:secure", session.secure)) cookie ++
			}
		if (cookie) vue.sys.router.go ()
		return cookie
		}
	}
