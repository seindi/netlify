import vue, {the, lib, library} from "vue.min.js"
import ini from "@/package.json"
let {define} = lib
let {zero, one} = lib.number

vue.on ("app:mount", function () {})
vue.on ("app:eject", function () {})
vue.on ("app:create", function () {})
vue.on ("app:update", function () {})
vue.on ("setup", function () {})
vue.on ("package", function () {})
vue.on ("package:error", function (error) { console.error ("package:error", (error || "token")) })
vue.on ("package:error/timeout", function (error) { console.error ("package:error/timeout", error) })
vue.on ("date:routine", function () {})
vue.on ("account:routine", function () {})
vue.on ("ping", function () {})
vue.on ("link", function () {})
vue.on ("link:url", function () {})
vue.on ("route", function () {
	if (vue.package.host) {
		if (vue.package.host.trial) {
			if (vue.package.host.trial.end) {
				if (vue.time.stamp > vue.package.host.trial.end) {
					if (null) vue.url.go ("trial:serial")
					}
				}
			}
		}
	})

vue.document.on ("click", function (element) {
	var pop = "[pop-link]"
	var sub = "[pop-up]"
	var css = "pop-active"
	var style = (pop + "." + css)
	var current = element.target.closest (pop)
	if (current) {
		if (element.target.closest (sub)) return
		lib.dom.css.list (current).toggle (css)
		lib.dom.query.selector.all (style, function (element) {
			if (element === current) return
			lib.dom.css.list (element).remove (css)
			})
		}
	else {
		lib.dom.query.selector.all (style, function (element) {
			if (element === current) return
			lib.dom.css.list (element).remove (css)
			})
		}
	})
